div(class='Display__title') Introduction

:markdown-it
  Cauldron is called the _unnotebook_ because it breaks with two fundamental
  concepts of traditional notebooks:

  1. Everything in a single file
  2. Develop inline with the display

  but retains the persistent workflow and rapid visualization that make
  notebooks such useful tools.

  ## Multiple Files

  There was a time when sharing code was a cumbersome task and to capture
  everything in a single notebook file was a great benefit for collaboration.
  But today code hosting services like GitHub and BitBucket make it easy to
  share code in addition to many other benefits. Now single notebook files have
  become the cumbersome way to share code because they don't play nicely with
  code hosting services. Collaboration results in unnecessary merge conflicts.
  Code can't be easily reviewed by peers. And extra display data is stored in
  every commit whether you want it or not.

  Cauldron notebooks are folders that contain multiple files instead of a
  single file that stores everything. Each cell in the notebook is stored as a
  separate code file. A settings file, called _cauldron.json_, stored within
  that folder contains all of the metadata and information that Cauldron uses
  to identify, manage and run that notebook.

  The notebook display files are also stored separately. They can be saved, or
  not, when you choose. This prevents the re-running of unmodified cells from
  needlessly updating the display files and making the version control system
  think there's a meaningful change to commit.

  ## Development Separated from Display

  Cauldron has no code editing capabilities. There's absolutely no reason to
  reinvent the wheel when there are so many fantastic code editors available
  already. These code editors are full of productivity features that
  are either missing or of lesser quality in existing notebooks.
